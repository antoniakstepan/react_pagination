{"version":3,"sources":["components/Pagination.jsx","App.js","index.js"],"names":["Pagination","state","selectLink","props","page","withInfo","handleNext","setState","prevState","handlePrevious","handleClick","this","total","perPage","links","Math","ceil","pages","Array","from","length","_","i","className","type","onClick","map","key","href","classNames","link__active","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"yOAIaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,EAAKC,MAAMC,KACvBC,SAAU,oBAHd,EAMEC,WAAa,WACX,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BN,WAAYM,EAAUN,WAAa,OARzC,EAYEO,eAAiB,WACf,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BN,WAAYM,EAAUN,WAAa,OAdzC,EAkBEQ,YAAc,SAACN,GACb,EAAKG,SAAS,CACZL,WAAYE,KApBlB,4CAwBE,WAAU,IAAD,SAC0BO,KAAKV,MAA9BC,EADD,EACCA,WAAYG,EADb,EACaA,SADb,EAEoBM,KAAKR,MAAxBS,EAFD,EAECA,MAAOC,EAFR,EAEQA,QACTC,EAAQC,KAAKC,KAAKJ,EAAQC,GAC1BI,EAAQC,MAAMC,KAAK,CAAEC,OAAQN,IAAS,SAACO,EAAGC,GAAJ,OAAUA,EAAI,KAE1D,OACE,6BACGpB,GAAc,GACb,uBAAGqB,UAAU,SACVlB,GAGL,wBAAIkB,UAAU,QACZ,4BACEC,KAAK,SACLD,UAAU,SACVE,QAASd,KAAKF,gBAHhB,QAOCQ,EAAMS,KAAI,SAAAtB,GAAI,OACb,wBAAIuB,IAAKvB,GACP,uBACEwB,KAAI,WAAMxB,GACVmB,UAAWM,IAAW,OACpB,CAAEC,aAAc1B,IAASF,IAC3BuB,QAAS,kBAAM,EAAKf,YAAYN,KAE/BA,OAIP,4BACEoB,KAAK,SACLD,UAAU,SACVE,QAASd,KAAKL,YAHhB,cAzDV,GAAgCyB,IAAMC,WCWvBC,EAXH,kBACV,oCACE,0CACA,kBAAC,EAAD,CACErB,MAAO,GACPC,QAAS,EACTT,KAAM,MCNZ8B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.62603001.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\n\nexport class Pagination extends React.Component {\n  state = {\n    selectLink: this.props.page,\n    withInfo: 'Some information',\n  }\n\n  handleNext = () => {\n    this.setState(prevState => ({\n      selectLink: prevState.selectLink + 1,\n    }));\n  }\n\n  handlePrevious = () => {\n    this.setState(prevState => ({\n      selectLink: prevState.selectLink - 1,\n    }));\n  }\n\n  handleClick = (page) => {\n    this.setState({\n      selectLink: page,\n    });\n  }\n\n  render() {\n    const { selectLink, withInfo } = this.state;\n    const { total, perPage } = this.props;\n    const links = Math.ceil(total / perPage);\n    const pages = Array.from({ length: links }, (_, i) => i + 1);\n\n    return (\n      <div>\n        {selectLink >= 6 && (\n          <p className=\"title\">\n            {withInfo}\n          </p>\n        )}\n        <ul className=\"page\">\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={this.handlePrevious}\n          >\n            prev\n          </button>\n          {pages.map(page => (\n            <li key={page}>\n              <a\n                href={`#${page}`}\n                className={classNames('link',\n                  { link__active: page === selectLink })}\n                onClick={() => this.handleClick(page)}\n              >\n                {page}\n              </a>\n            </li>\n          ))}\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={this.handleNext}\n          >\n            next\n          </button>\n        </ul>\n      </div>\n    );\n  }\n}\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nconst App = () => (\n  <>\n    <h1>Pagination</h1>\n    <Pagination\n      total={42}\n      perPage={5}\n      page={1}\n    />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}